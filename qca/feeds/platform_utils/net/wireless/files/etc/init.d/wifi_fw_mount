#!/bin/sh /etc/rc.common
#
# Copyright (c) 2017-2019 The Linux Foundation. All rights reserved.
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

START=00
STOP=95
mount_wifi_fw (){
        local emmc_part=""
        local nand_part=""
        local nor_part=""
	local primaryboot=""
	local part_name="0:WIFIFW"
	local ubi_part_name="rootfs"
	local arch=""
	local wifi_on_rootfs=""

	if mount | grep -q WIFI_FW; then
		return 0
	fi

	arch=$1
        primaryboot=$(cat /proc/boot_info/$part_name/primaryboot)
        if [ $primaryboot -eq 1 ]; then
                part_name="0:WIFIFW_1"
        fi

	if [ "$arch" == "IPQ6018" ]; then
		wifi_on_rootfs="1"
	fi

        emmc_part=$(find_mmc_part $part_name 2> /dev/null)
        nor_part=$(cat /proc/mtd | grep WIFIFW | awk '{print $1}' | sed 's/:$//')
        local nor_flash=`find /sys/bus/spi/devices/*/mtd -name ${nor_part}`
	if [ -n "$wifi_on_rootfs" ]; then
		nand_part=$(find_mtd_part $ubi_part_name 2> /dev/null)
	else
		nand_part=$(find_mtd_part $part_name 2> /dev/null)
	fi

        mkdir -p /lib/firmware/$arch/WIFI_FW

        if [ -n "$emmc_part" ]; then
                /bin/mount -t squashfs $emmc_part /lib/firmware/$arch/WIFI_FW > /dev/console 2>&1
		[ -f /rom/lib/firmware/$arch/WIFI_FW/q6_fw.mdt ] && cp /rom/lib/firmware/$arch/WIFI_FW/*.* /lib/firmware/$arch/WIFI_FW/
        elif [ -n "$nor_flash" ]; then
                local nor_mtd_part=$(find_mtd_part $part_name 2> /dev/null)
                /bin/mount -t squashfs $nor_mtd_part /lib/firmware/$arch/WIFI_FW > /dev/console 2>&1
        elif [ -n "$nand_part" ]; then
                if [ -n "$wifi_on_rootfs" ]; then
                       local PART=$(grep -w  "rootfs" /proc/mtd | awk -F: '{print $1}')
                else
                       local PART=$(grep -w  "WIFIFW" /proc/mtd | awk -F: '{print $1}')
                fi
                ubiattach -p /dev/$PART
                sync
                local ubi_part=$(find_mtd_part wifi_fw 2> /dev/null)
                /bin/mount -t squashfs $ubi_part /lib/firmware/$arch/WIFI_FW > /dev/console 2>&1
        fi
	if [ -f /lib/firmware/$arch/WIFI_FW/q6_fw.mdt ]; then
            echo " WIFI FW mount is successful" > /dev/console 2>&1
	fi
	cd  /lib/firmware/$arch && ln -sf WIFI_FW/*.* .
	if [ -f /lib/firmware/$arch/WIFI_FW/firmware_rdp_feature.ini ]; then
		cd /lib/firmware
		ln -sf /lib/firmware/$arch/WIFI_FW/firmware_rdp_feature.ini .
	fi
	. /lib/read_caldata_to_fs.sh
	do_load_ipq4019_board_bin

        mkdir -p /vendor/firmware
        mv /lib/firmware/$arch/WIFI_FW/Data.msc /vendor/firmware

}

boot() {
 . /lib/functions/system.sh
	local board=$(grep -o "IPQ.*" /proc/device-tree/model | awk -F/ '{print $1}')
        if [ "$board" == "IPQ807x" ]; then
                mount_wifi_fw "IPQ8074"
	elif [ "$board" == "IPQ6018" ]; then
		mount_wifi_fw "IPQ6018"
	else
		echo "\nInvalid Target"
        fi

}

stop() {
	local emmc_part=""
        local nand_part=""
        local nor_part=""
        local primaryboot=""
        local part_name="0:WIFIFW"
	local arch=""
	local board=$(grep -o "IPQ.*" /proc/device-tree/model | awk -F/ '{print $1}')
        if [ "$board" == "IPQ807x" ]; then
                arch="IPQ8074"
	elif [ "$board" == "IPQ6018" ]; then
		arch="IPQ6018"
		part_name="rootfs"
		wifi_on_rootfs="1"
	else
		echo "\nInvalid Target"
		return 0
        fi
        primaryboot=$(cat /proc/boot_info/$part_name/primaryboot)
        if [ $primaryboot -eq 1 ]; then
		part_name="${part_name}_1"
        fi
        emmc_part=$(find_mmc_part $part_name 2> /dev/null)
        nor_part=$(cat /proc/mtd | grep WIFIFW | awk '{print $1}' | sed 's/:$//')
        local nor_flash=`find /sys/bus/spi/devices/*/mtd -name ${nor_part}`
        nand_part=$(find_mtd_part $part_name 2> /dev/null)
	if [ -n "$emmc_part" ]; then
		umount /lib/firmware/$arch/WIFI_FW
        elif [ -n "$nor_flash" ]; then
                local nor_mtd_part=$(find_mtd_part $part_name 2> /dev/null)
		umount /lib/firmware/$arch/WIFI_FW
        elif [ -n "$nand_part" ]; then
                umount /lib/firmware/$arch/WIFI_FW
		if [ -z "$wifi_on_rootfs" ]; then
	                local PART=$(grep -w  "WIFIFW" /proc/mtd | awk -F: '{print $1}')
	                ubidetach -f -p  /dev/$PART
	                sync
		fi
        fi
	return 0
}
